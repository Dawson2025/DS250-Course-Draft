---
title: "Client Report - What's in a Name?"
subtitle: "Unit 1 Task 2"
author: "Dawson Packer"
format:
  html:
    self-contained: true
    page-layout: full
    title-block-banner: true
    toc: true
    toc-depth: 3
    toc-location: body
    number-sections: false
    html-math-method: katex
    code-fold: true
    code-summary: "Show the code"
    code-overflow: wrap
    code-copy: hover
    code-tools:
      source: false
      toggle: true
      caption: See code
execute:
  warning: false
---

```{python}
# Bring in pandas to read the spreadsheet-like data
import pandas as pd
# Bring in Markdown so I can print a short written answer
from IPython.display import Markdown
# Bring in the plotting pieces I need from lets_plot
from lets_plot import ggplot, aes, geom_line, geom_vline, labs, theme_minimal, scale_x_continuous, LetsPlot
# Turn on lets_plot visuals inside this report
LetsPlot.setup_html(isolated_frame=True)
# Store my own name so I can use it in Question 1
preferred_name = "Dawson"
# Store my birth year so I can mark it on the chart
birth_year = 2003
```

## Data Preparation

```{python}
# Read the SSA name counts straight from the class GitHub file
names_year = pd.read_csv("https://github.com/byuidatascience/data4names/raw/master/data-raw/names_year/names_year.csv")
```

## QUESTION 1

**How does your name at your birth year compare to its use historically?**

```{python}
# Filter the table to just my name and sort the years so the line looks right
my_history = names_year.loc[names_year["name"] == preferred_name, ["year", "Total"]].sort_values("year")
# Build a simple line chart with a dashed line at my birth year
plot_q1 = (
    ggplot(my_history, aes("year", "Total"))
    + geom_line(color="#1f77b4")
    + geom_vline(xintercept=birth_year, linetype="dashed", color="#d62728")
    + scale_x_continuous(format='d')
    + labs(title=f"{preferred_name} births in the United States", x="Year", y="Total births")
    + theme_minimal()
)
# Pull the total for my birth year so I can mention it
birth_total = int(my_history.loc[my_history["year"] == birth_year, "Total"].iloc[0])
# Pull the year where the name hit its national peak
peak_row = my_history.loc[my_history["Total"].idxmax()]
note_q1 = (
    f"There weren't many {preferred_name}s born before the 1990s, but after 1997 it became more popular to name a child {preferred_name}, with uses of the name skyrocketing in the years after that. "
    f"The peak year was {int(peak_row['year'])} with {int(peak_row['Total']):,} births. "
    f"In {birth_year}, {birth_total:,} babies were named {preferred_name}. "
    f"There haven't been as many {preferred_name}s as there were when I was born since then. "

)
```

```{python}
# Show the Question 1 chart
plot_q1
```

```{python}
# Share the quick explanation for Question 1
Markdown(note_q1)
```

## QUESTION 2

**If you talked to someone named Brittany on the phone, what is your guess of his or her age? What ages would you not guess?**

```{python}
# Filter the table to Brittany and sort the years so the line reads left to right
brittany_history = names_year.loc[names_year["name"] == "Brittany", ["year", "Total"]].sort_values("year")
# Draw Brittany's national totals with a dashed line at the peak year
peak_year = int(brittany_history.loc[brittany_history["Total"].idxmax(), "year"])
plot_q2 = (
    ggplot(brittany_history, aes("year", "Total"))
    + geom_line(color="#cc79a7")
    + geom_vline(xintercept=peak_year, linetype="dashed", color="#ff7f0e")
    + scale_x_continuous(format='d')
    + labs(title="Brittany births in the United States", x="Year", y="Total births")
    + theme_minimal()
)
# Take a weighted average birth year so I can turn it into an age guess
guess_year = int(round((brittany_history["year"] * brittany_history["Total"]).sum() / brittany_history["Total"].sum()))
# Convert to an age range using the current year (2025)
peak_age, guess_age = 2025 - peak_year, 2025 - guess_year

note_q2 = (
    f"Brittany peaked in {peak_year} and averages around {guess_year}, so I would guess she is {guess_age} or {peak_age}. "
    f"I would avoid guessing ages tied to anything that would correspond to their date of birth being before 1980(older than 45) or after 2005(younger than 20) because the use of the name Brittany spiked before/after those years."
)
```

```{python}
# Show the Brittany chart
plot_q2
```

```{python}
# Share the Brittany age estimate
Markdown(note_q2)
```
