---
title: "DS 250 Competency"
date: 2020-05-01T11:02:05+06:00
lastmod: 2020-09-15T10:42:26+06:00
weight: 1
draft: false
# search related keywords
keywords: [""]
---

> We need skills not grades!  [Shifting Attention](https://www.thegraidenetwork.com/blog-all/2018/8/1/retiring-the-red-pen-shifting-attention-from-grades-to-learning)

### Competency scale {#scale}

You must complete __all__ competency items at the level detailed to achieve the listed grade. You can request __half-step__ adjustments if you fall slightly short on some elements __and__ over on others.  If you are fall short slightly on some elements but dont achive over on others you have not met the requirements for the __half-step__ adjustment.

Example of a half-step adjustment:

 >   Projects 33 points (B+)  
 >   Project Stretchs 4 (A+)  
 >   Mid-project checkpoints (online only) 5 (A)  
 >   Methods & Calculations checkpoints 5 (B)  
 >   DS Community 5 (A+)  
 >   Coding challenge 3 (A/B)  
 >   The over-under of my work is a B+/A-. My extra work on Project Stretches helps ofset me not meeting the A level project points. Also my extra DS Community efforts to ofset my M&C checkpoints. I am requesting a A for the course.

You will need to provide a detailed description in your __**Course Goals Letter**__ of the items you completed to support your grade request. The course goals letter is a reflection on your efforts and the competencies they align with as well as your reflection on achieving your goals for this course.  

#### Example Course Goals Letter (End):  
Here is my assessment of my efforts and the competency that they align with, as well as my reflection on achieving my goals for this course:

 >   Projects 29 points (B-)  
 >   Project Stretchs 1 (C)  
 >   Mid-project checkpoints (online only) 4 (B+)  
 >   Methods & Calculations checkpoints 4 (C+)  
 >   DS Community 3 (A)  
 >   Coding challenge 3 (A/B)  
 >   The over-under of my work is a B/B+. I am requesting a B+ for the course. 

::: {.panel-tabset}

## Leader (A)
#### Leader (A)
| Element                                   | Requirement     | Description               |
| :----------------------------------       | --------------- | ------------------------- |
| __Projects__                              | 34+ Points      | 5 points per project      |
| __Project Stretchs__                      | At least 3      | 3 projects all stretches  |
| __Mid-project checkpoints__               | 5 completed     | Full credit (online only) |
| __Methods & Calculations checkpoints__    | 6 completed     | All 6 @ 100% Full Points  |
| __DS Community__                          | At least 3      | --                        |
| __Course Goal Letter (End)__              | submission      | --                        |
| __Coding challenge__                      | At least 3      | Score is out of 4         |

## Supporter (B)
#### Supporter (B)
| Element                                   | Requirement     | Description               |
| :----------------------------------       | --------------- | ------------------------- |
| __Projects__                              | 29-33 Points    | 5 points per project      |
| __Project Stretchs__                      | At least 2      | 2 projects all stretches  |
| __Mid-project checkpoints__               | 3 completed     | Full credit (online only) |
| __Methods & Calculations checkpoints__    | 5 completed     | 5 @ 100% Full Points      |
| __DS Community__                          | At least 2      | --                        |
| __Course Goal Letter (End)__              | submission      | --                        |
| __Coding challenge__                      | At least 3      | Score is out of 4         |

## Listener (C)
#### Listener (C)
| Element                                   | Requirement     | Description               |
| :----------------------------------       | --------------- | ------------------------- |
| __Projects__                              | 24-28 Points    | 5 points per project      |
| __Project Stretchs__                      | At least 1      | 1 projects all stretches  |
| __Mid-project checkpoints__               | 3 completed     | Full credit (online only) |
| __Methods & Calculations checkpoints__    | 3 completed     | 3 @ 100% Full Points      |
| __DS Community__                          | At least 1      | --                        |
| __Course Goal Letter (End)__              | submission      | --                        |
| __Coding challenge__                      | At least 2      | Score is out of 4         |

## Asleep (D)
#### Asleep (D)
| Element                                   | Requirement     | Description               |
| :----------------------------------       | --------------- | ------------------------- |
| __Projects__                              | 14-23 Points    | 5 points per project      |
| __Project Stretchs__                      | None            | 0 projects all stretches  |
| __Mid-project checkpoints__               | 1 completed     | Full credit (online only) |
| __Methods & Calculations checkpoints__    | 2 completed     | 2 @ 100% Full Points      |
| __DS Community__                          | None            | --                        |
| __Course Goal Letter (End)__              | None            | --                        |
| __Coding challenge__                      | None            | Score is out of 4         |

:::


### Competency elements {#elements}


::: {.panel-tabset}
## Projects
#### Projects (Questions|Tasks)

_Each of the 7 projects is worth 5 points. There is no __late work__ accepted for any project. Any submissions after the due date will receive a zero (0)._

_There is a __optional__ early submission up through Friday (F) of the 2nd week of the project. This allows for coaching feedback and gives you that opportunity to fix any errors and resubmit. The resubmission is due by the following Wednesday. __No__ resubmissions are allowed after that date. This structure is designed to give __all__ students 2 attempts to get full project points._  

_All that wait to submit on the due date (Saturday), become ineligible for a rework submission. All submissions after Saturday will receive a zero (0)._

_There are 6 two-week projects (P0-P5) and 1 one-week project (P6)._

_Projects 1-5 will have stretch questions. You must complete all the core questions first before attempting the stretch questions. You must complete all the stretch questions accurately for the project to count as a stretch project for the competency requirements. The number in the competencies relating to Project Stretches is the number of projects with all the stretch questions completed._

##### Grading Details

* **1 point:**  Submission
* **3 points:** Submission of a good faith attempt with a statement of work quality
* **4 points:** High-quality work that addresses each of the __**Questions and Tasks**__ and a comment in Canvas of your statement of work quality
* **5 points:** Perfect-quality work or Rework that addressed all issues from the early submission

## Quiz Checkpoints
#### Checkpoints (methods and calculations)

_These Methods and Calculation Quizzes are in Canvas and they open when the project starts. They have unlimited attempts and remain open until the end of the semester. You must get a 100% on these quizzes for them to count toward the competencies._

##### Examples

* **Fact-Finding Questions (Calculate descriptive summaries):**  Fact-finding questions help you with calculations that build into the _Questions and Tasks_ of the project. These questions have clearly defined answers using Python calculations. You should expect 2-3 problems.

1. Example: Using the top 10 airports in size, what is the average size?
2. Example: What proportion of flights are delayed at the largest airport?

* **How the code works questions (Explaining the tools):**  This part could have direct answer questions or open-ended questions.  

1. Example (direct):  What is the recommended function for arranging your data by a variable? What are the outputs after using `<FUNCTION>`?
2. Example (open): Your client has shown some confusion about NumPy's 'nan' handling in Python. Help them understand by answering the question, 'How is missing data handled in Pandas?' 

## Checkpoints Mid-Project (online only)
#### Checkpoints (Mid-project status)

_The mid-project checkpoint has a few questions. It opens the first day of the project and closes on the first Saturday of a 2 week project. It has the following questions._

##### Examples

1. Throughout this project, you have worked on a code. Record a video showing your code that is no more than 1 minute. This video must include:
    > How long have you worked on this code?
    > What is your code designed to do?
    > What are, if any, the issues youâ€™re facing?
    > What questions or tasks have you checked off?
1. Submit your 1 minute video. 
    > You may share any additional notes with your teacher using the Canvas comment feature.

## DS Community
#### Data Science Community

To earn credit for the DS Community element you must __complete tasks from the list below__. At the end of the semester, you will be asked to report on how many tasks you completed and what you learned from them. See the Competency Scale above to determine how many you need to complete based on the grade you want.

- Attend [Data Science Society](https://byuidatascience.github.io/society/) at least once.
- Sign up for an email newsletter that will teach you more about data science. [Data Science Weekly](https://www.datascienceweekly.org/) or [Data Elixir](https://dataelixir.com/) are good options.
- Listen to a podcast episode about data science. [Build a Career in Data Science](https://podcast.bestbook.cool/) has some excellent episodes.
- Watch a professional presentation on YouTube about data science. Be prepared to share the link and a summary of the video.
- Reach out to someone who works in a data-related field and ask them for 15 minutes of their time. Use this time to conduct an "[informational interview](https://brightspotcdn.byu.edu/54/b6/2554ebb842fab54640a15ff0afb3/informational-interview.pdf)" and learn more about their responsibilities and career path.
- Research and apply to at least 5 data-related jobs or internships.

## Course Goals Letter
#### Finishing the semester

Submit a __**Course Goals Letter (End)**__ that includes what you have learned from this class, the next data science course you plan on taking, and the final grade that you are requesting based on the work you have submitted compared to the competencies above.

## Challenge
#### Coding challenge

We will have a timed (60 min) coding challenge on the ultimate or penultimate day of class. This is not a traditional exam and is similar to the projects all semester in size and scope but is accumulative. It will cover the general techniques that we have been practicing throughout the course. You will rely on your code from the projects and the methods and calculations checkpoints to complete the challenge.

We expect to have a few practice challenges throughout the semester. We will score the coding challenge on a four-point scale.

- **1 point:** At least you tried.
- **2 points:** You have learned some items from the course, but your work in the coding challenge is deficient.
- **3 points:** Your submission uses proper coding techniques and addresses the objective.
- **4 points:** Exceptional work. Your code can be used as a solution to share with others.

:::
